{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/betsy/Desktop/Challenge-1-Bank-of-Flatiron/phase-2-bank-of-flatiron-codechallenge/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TransactionList from './TransactionList';\nimport TransactionForm from './TransactionForm';\nimport Search from './Search';\n\nconst App = () => {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    fetch('http://localhost:8001/transactions').then(response => response.json()).then(data => setTransactions(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  const handleFormSubmit = formData => {\n    fetch('http://localhost:8001/transactions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      return response.json();\n    }).then(data => {\n      setTransactions([...transactions, data]);\n    }).catch(error => console.error('Error posting data:', error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TransactionList, {\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionForm, {\n      onFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"o7QggG5bme7bzQmlopXQtYE73iI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/betsy/Desktop/Challenge-1-Bank-of-Flatiron/phase-2-bank-of-flatiron-codechallenge/src/components/App.js"],"names":["React","useEffect","useState","TransactionList","TransactionForm","Search","App","transactions","setTransactions","searchTerm","setSearchTerm","fetch","then","response","json","data","catch","error","console","handleFormSubmit","formData","method","headers","body","JSON","stringify","ok","Error"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAIP,eAAe,CAACO,IAAD,CAF/B,EAGGC,KAHH,CAGSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC,CAHlB;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,QAAME,gBAAgB,GAAGC,QAAQ,IAAI;AACnCT,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CU,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf;AALoC,KAAvC,CAAL,CAOCR,IAPD,CAOMC,QAAQ,IAAI;AAChB,UAAI,CAACA,QAAQ,CAACa,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACD;;AACD,aAAOd,QAAQ,CAACC,IAAT,EAAP;AACD,KAZD,EAaCF,IAbD,CAaMG,IAAI,IAAI;AACZP,MAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBQ,IAAlB,CAAD,CAAf;AACD,KAfD,EAgBCC,KAhBD,CAgBOC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC,CAhBhB;AAiBD,GAlBD;;AAoBA,sBACE;AAAA,4BACE,QAAC,eAAD;AAAiB,MAAA,YAAY,EAAEV;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,eAAD;AAAiB,MAAA,YAAY,EAAEY;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAEV,UAApB;AAAgC,MAAA,aAAa,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAtCD;;GAAMJ,G;;KAAAA,G;AAwCN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TransactionList from './TransactionList';\nimport TransactionForm from './TransactionForm';\nimport Search from './Search';\n\nconst App = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    fetch('http://localhost:8001/transactions')\n      .then(response => response.json())\n      .then(data => setTransactions(data))\n      .catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  const handleFormSubmit = formData => {\n    fetch('http://localhost:8001/transactions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      setTransactions([...transactions, data]);\n    })\n    .catch(error => console.error('Error posting data:', error));\n  };\n\n  return (\n    <div>\n      <TransactionList transactions={transactions} />\n      <TransactionForm onFormSubmit={handleFormSubmit} />\n      <Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}