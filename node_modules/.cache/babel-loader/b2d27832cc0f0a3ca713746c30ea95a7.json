{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/betsy/Desktop/Challenge-1-Bank-of-Flatiron/phase-2-bank-of-flatiron-codechallenge/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\n\nfunction AddTransactionForm({\n  handleAddTransaction\n}) {\n  _s();\n\n  const [formData, setFormData] = React.useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: null\n  }); //posting the transaction\n\n  const handlePostTransaction = async event => {\n    event.preventDefault();\n    console.log(formData);\n\n    try {\n      const response = await fetch(\"http://localhost:8001/transactions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": 'application/json'\n        },\n        body: JSON.stringify({\n          date: formData.date,\n          description: formData.description,\n          category: formData.category,\n          amount: formData.amount\n        })\n      });\n      const jsonResponse = await response.json();\n      handleAddTransaction(jsonResponse);\n      setFormData({\n        date: \"\",\n        description: \"\",\n        category: \"\",\n        amount: null\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //handling changes in the transactions\n\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePostTransaction,\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: formData.date,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: formData.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\",\n          value: formData.category,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\",\n          value: formData.amount,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"PWmMBS1uQQMCpsqtK+tEimDVCqQ=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/home/betsy/Desktop/Challenge-1-Bank-of-Flatiron/phase-2-bank-of-flatiron-codechallenge/src/components/AddTransactionForm.js"],"names":["React","AddTransactionForm","handleAddTransaction","formData","setFormData","useState","date","description","category","amount","handlePostTransaction","event","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","jsonResponse","json","error","handleChange","e","target","name","value"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction AddTransactionForm({handleAddTransaction}) {\n  const [formData, setFormData] = React.useState({\n    date:\"\",\n    description: \"\",\n    category:\"\",\n    amount: null,\n  });\n  //posting the transaction\n  const handlePostTransaction = async (event) => {\n      event.preventDefault();\n      console.log(formData);\n      try {\n        const response = await fetch(\"http://localhost:8001/transactions\", {\n          method: \"POST\",\n          headers: {\"Content-Type\": 'application/json'},\n          body: JSON.stringify({\n            date: formData.date,\n            description: formData.description,\n            category: formData.category,\n            amount: formData.amount,\n          }),\n        });\n        const jsonResponse = await response.json();\n        handleAddTransaction(jsonResponse);\n        setFormData({\n          date: \"\",\n          description: \"\",\n          category: \"\",\n          amount: null,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n  };\n  //handling changes in the transactions\n  const handleChange = (e) => {\n    setFormData({...formData, [e.target.name]: e.target.value});\n  };\n\n  return (\n    <div className=\"ui segment\">\n      <form onSubmit={handlePostTransaction} className=\"ui form\">\n        <div className=\"inline fields\">\n          <input type=\"date\" name=\"date\" value={formData.date} onChange={handleChange}/>\n          <input type=\"text\" name=\"description\" placeholder=\"Description\" value={formData.description} onChange={handleChange}/>\n          <input type=\"text\" name=\"category\" placeholder=\"Category\" value={formData.category} onChange={handleChange}/>\n          <input type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" value={formData.amount} onChange={handleChange}/>\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;"]},"metadata":{},"sourceType":"module"}