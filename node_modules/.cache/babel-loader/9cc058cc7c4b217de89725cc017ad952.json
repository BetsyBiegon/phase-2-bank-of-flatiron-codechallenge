{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/betsy/Desktop/Challenge-1-Bank-of-Flatiron/phase-2-bank-of-flatiron-codechallenge/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport AccountContainer from \"./AccountContainer\";\n\nasync function getTransactions() {\n  try {\n    const response = await fetch('http://localhost:8001/transactions');\n    const jsonResponse = await response.json();\n    return jsonResponse;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction App() {\n  _s();\n\n  const [transactions, setTransactions] = React.useState([]);\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const fetchedTransactions = await getTransactions();\n      setTransactions(fetchedTransactions);\n    };\n\n    fetchData(); // Call the fetchData function inside useEffect\n  }, []); // Empty dependency array means this effect runs only once after the initial render\n\n  const handleAddTransaction = transaction => {\n    setTransactions([...transactions, transaction]);\n  };\n\n  const handleDelTransaction = transactionID => {\n    const filterTrans = transactions.filter(trans => trans.id !== transactionID);\n    setTransactions(filterTrans);\n  };\n\n  const handleSearch = searchTerm => {\n    if (searchTerm) {\n      const filterTrans = transactions.filter(trans => trans.description.toLowerCase().includes(searchTerm.toLowerCase()));\n      setTransactions(filterTrans);\n    } else {\n      getTransactions(); // Use the getTransactions function defined outside useEffect\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui raised segment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui segment violet inverted\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"The Royal Bank of Flatiron\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountContainer, {\n      handleAddTransaction: handleAddTransaction,\n      transactions: transactions,\n      handleSearch: handleSearch,\n      handleDelTransaction: handleDelTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/betsy/Desktop/Challenge-1-Bank-of-Flatiron/phase-2-bank-of-flatiron-codechallenge/src/components/App.js"],"names":["React","AccountContainer","getTransactions","response","fetch","jsonResponse","json","error","console","log","App","transactions","setTransactions","useState","useEffect","fetchData","fetchedTransactions","handleAddTransaction","transaction","handleDelTransaction","transactionID","filterTrans","filter","trans","id","handleSearch","searchTerm","description","toLowerCase","includes"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,eAAeC,eAAf,GAAiC;AAC/B,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA5B;AACA,UAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACA,WAAOD,YAAP;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AAED,SAASG,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAAxC;AAEAb,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpB,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,mBAAmB,GAAG,MAAMd,eAAe,EAAjD;AACAU,MAAAA,eAAe,CAACI,mBAAD,CAAf;AACD,KAHD;;AAKAD,IAAAA,SAAS,GANW,CAMN;AACf,GAPD,EAOG,EAPH,EAHa,CAUL;;AAER,QAAME,oBAAoB,GAAIC,WAAD,IAAiB;AAC5CN,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBO,WAAlB,CAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAIC,aAAD,IAAmB;AAC9C,UAAMC,WAAW,GAAGV,YAAY,CAACW,MAAb,CACjBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaJ,aADN,CAApB;AAGAR,IAAAA,eAAe,CAACS,WAAD,CAAf;AACD,GALD;;AAOA,QAAMI,YAAY,GAAIC,UAAD,IAAgB;AACnC,QAAIA,UAAJ,EAAgB;AACd,YAAML,WAAW,GAAGV,YAAY,CAACW,MAAb,CACjBC,KAAD,IAAWA,KAAK,CAACI,WAAN,CAAkBC,WAAlB,GAAgCC,QAAhC,CAAyCH,UAAU,CAACE,WAAX,EAAzC,CADO,CAApB;AAGAhB,MAAAA,eAAe,CAACS,WAAD,CAAf;AACD,KALD,MAKO;AACLnB,MAAAA,eAAe,GADV,CACc;AACpB;AACF,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,gBAAD;AACE,MAAA,oBAAoB,EAAEe,oBADxB;AAEE,MAAA,YAAY,EAAEN,YAFhB;AAGE,MAAA,YAAY,EAAEc,YAHhB;AAIE,MAAA,oBAAoB,EAAEN;AAJxB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA/CQT,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport AccountContainer from \"./AccountContainer\";\n\nasync function getTransactions() {\n  try {\n    const response = await fetch('http://localhost:8001/transactions');\n    const jsonResponse = await response.json();\n    return jsonResponse;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction App() {\n  const [transactions, setTransactions] = React.useState([]);\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const fetchedTransactions = await getTransactions();\n      setTransactions(fetchedTransactions);\n    };\n\n    fetchData();  // Call the fetchData function inside useEffect\n  }, []); // Empty dependency array means this effect runs only once after the initial render\n\n  const handleAddTransaction = (transaction) => {\n    setTransactions([...transactions, transaction]);\n  };\n\n  const handleDelTransaction = (transactionID) => {\n    const filterTrans = transactions.filter(\n      (trans) => trans.id !== transactionID\n    );\n    setTransactions(filterTrans);\n  };\n\n  const handleSearch = (searchTerm) => {\n    if (searchTerm) {\n      const filterTrans = transactions.filter(\n        (trans) => trans.description.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      setTransactions(filterTrans);\n    } else {\n      getTransactions(); // Use the getTransactions function defined outside useEffect\n    }\n  };\n\n  return (\n    <div className=\"ui raised segment\">\n      <div className=\"ui segment violet inverted\">\n        <h2>The Royal Bank of Flatiron</h2>\n      </div>\n      <AccountContainer \n        handleAddTransaction={handleAddTransaction}\n        transactions={transactions}\n        handleSearch={handleSearch}\n        handleDelTransaction={handleDelTransaction}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}