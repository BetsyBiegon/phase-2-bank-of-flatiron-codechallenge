{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/betsy/Desktop/Challenge-1-Bank-of-Flatiron/phase-2-bank-of-flatiron-codechallenge/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TransactionTable from './components/TransactionTable';\nimport TransactionForm from './components/TransactionForm';\nimport axios from 'axios';\n\nfunction App() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    async function fetchTransactions() {\n      try {\n        const response = await axios.get('http://localhost:3000/transactions');\n        setTransactions(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    fetchTransactions();\n  }, []);\n\n  const handleAddTransaction = async newTransaction => {\n    try {\n      const response = await axios.post('http://localhost:3000/transactions', newTransaction);\n      setTransactions([...transactions, response.data]);\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n    }\n  };\n\n  const handleSearch = () => {\n    const filteredResults = transactions.filter(transaction => transaction.description.toLowerCase().includes(searchTerm.toLowerCase()));\n    setSearchResults(filteredResults);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transaction App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionForm, {\n      onAddTransaction: handleAddTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by description\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(TransactionTable, {\n      transactions: searchTerm ? searchResults : transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PbCKATOvpqi5oT5OmzzZXadBbRw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/betsy/Desktop/Challenge-1-Bank-of-Flatiron/phase-2-bank-of-flatiron-codechallenge/src/components/App.js"],"names":["React","useState","useEffect","TransactionTable","TransactionForm","axios","App","transactions","setTransactions","searchTerm","setSearchTerm","searchResults","setSearchResults","fetchTransactions","response","get","data","error","console","handleAddTransaction","newTransaction","post","handleSearch","filteredResults","filter","transaction","description","toLowerCase","includes","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeW,iBAAf,GAAmC;AACjC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,oCAAV,CAAvB;AACAP,QAAAA,eAAe,CAACM,QAAQ,CAACE,IAAV,CAAf;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAeA,KAAf;AACD;AACF;;AACDJ,IAAAA,iBAAiB;AAClB,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMM,oBAAoB,GAAG,MAAOC,cAAP,IAA0B;AACrD,QAAI;AACF,YAAMN,QAAQ,GAAG,MAAMT,KAAK,CAACgB,IAAN,CAAW,oCAAX,EAAiDD,cAAjD,CAAvB;AACAZ,MAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBO,QAAQ,CAACE,IAA3B,CAAD,CAAf;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,2BAAd,EAA2CA,KAA3C;AACD;AACF,GAPD;;AASA,QAAMK,YAAY,GAAG,MAAM;AACzB,UAAMC,eAAe,GAAGhB,YAAY,CAACiB,MAAb,CAAqBC,WAAD,IAC1CA,WAAW,CAACC,WAAZ,CAAwBC,WAAxB,GAAsCC,QAAtC,CAA+CnB,UAAU,CAACkB,WAAX,EAA/C,CADsB,CAAxB;AAGAf,IAAAA,gBAAgB,CAACW,eAAD,CAAhB;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,eAAD;AAAiB,MAAA,gBAAgB,EAAEJ;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,uBAFd;AAGE,MAAA,KAAK,EAAEV,UAHT;AAIE,MAAA,QAAQ,EAAGoB,CAAD,IAAOnB,aAAa,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJhC;AAAA;AAAA;AAAA;AAAA,YAHF,eASE;AAAQ,MAAA,OAAO,EAAET,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,oBAWE,QAAC,gBAAD;AAAkB,MAAA,YAAY,EAAEb,UAAU,GAAGE,aAAH,GAAmBJ;AAA7D;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAhDQD,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TransactionTable from './components/TransactionTable';\nimport TransactionForm from './components/TransactionForm';\nimport axios from 'axios';\n\nfunction App() {\n  const [transactions, setTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  useEffect(() => {\n    async function fetchTransactions() {\n      try {\n        const response = await axios.get('http://localhost:3000/transactions');\n        setTransactions(response.data);\n      } catch (error) {\n        console.error( error);\n      }\n    }\n    fetchTransactions();\n  }, []);\n\n  const handleAddTransaction = async (newTransaction) => {\n    try {\n      const response = await axios.post('http://localhost:3000/transactions', newTransaction);\n      setTransactions([...transactions, response.data]);\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n    }\n  };\n\n  const handleSearch = () => {\n    const filteredResults = transactions.filter((transaction) =>\n      transaction.description.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setSearchResults(filteredResults);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Transaction App</h1>\n      <TransactionForm onAddTransaction={handleAddTransaction} />\n      <input\n        type=\"text\"\n        placeholder=\"Search by description\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n      <button onClick={handleSearch}>Search</button> {/* Add this button */}\n      {/* Display the list of transactions */}\n      <TransactionTable transactions={searchTerm ? searchResults : transactions} />\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}